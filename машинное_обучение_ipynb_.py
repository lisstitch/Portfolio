# -*- coding: utf-8 -*-
"""Машинное обучение.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pa_Yy5Qdxg1Lalk-VBIuGxFvlweq49Jj

# Предсказываем стоимость мед страховки
"""

from google.colab import drive
drive.mount('/content/drive')

"""## Загужаем необходимые библиотеки"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

"""## Загружаем данные

Собраны данные:
- age: возраст
- sex: пол
- bmi: индекс массы тела
- children: количество детей, охваченных медицинским страхованием / количество иждивенцев
- smoker: курение
- region: регион (northeast, southeast, southwest, northwest).
- charges: индивидуальные медицинские расходы (его и хотим предсказать)
"""

df = pd.read_csv('insurance.csv')

df.head()

"""## Смотрим статистику, что нет пропусков и отсуствующих значений"""

df.info()

df.describe()

"""## Преобразуем строковые данные"""

# Заменяем пол и курение на числа
df['sex']=df['sex'].map({'male':1, 'female':0})
df['smoker']=df['smoker'].map({'yes':1,'no':0})

df.head()

# Заменяем регион на набор отдельных колонок (is_southwest, is_southeast и тп)
df = pd.get_dummies(df, columns=['region'])
df.head()

"""## Формируем признаки и целевую переменную"""

## Сформируйте признаки и целевую переменную

X = df[['age', 'sex', 'bmi', 'children', 'smoker', 'region_northeast', 'region_northwest', 'region_southeast', 'region_southwest']]
y = df['charges']

"""## Разделяем данные на выборку для обучения/проверки"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

"""## Создаем и обучаем модель линейной регресии"""

# Создайте и обучите модель
lr = LinearRegression()
lr.fit(X_train, y_train)
lr.coef_

"""## Получаем предсказание и оцениваем качество"""

# Получите предсказание
lr.predict(X_test)

# Оцените качество, при помощи метода mean_squared_error для тестовой выборки
mean_squared_error(y_test, lr.predict(X_test))

mean_squared_error(y_train, lr.predict(X_train))

"""## Делаем предсказание для одного человека"""

# Заполняем данные по конкретному человеку
data = [{
    "age": 20,
    "sex": 1,
    "bmi": 30,
    "children": 2,
    "smoker": 1,
    "region_northeast": 0,
    "region_northwest": 0,
    "region_southeast": 1,
    "region_southwest": 0
}]

df_person = pd.DataFrame(data)
df_person.head()

lr.predict(df_person)